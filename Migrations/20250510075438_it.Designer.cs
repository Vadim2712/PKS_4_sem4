// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TouristGuideApp.Data;

#nullable disable

namespace PKS_4_sem4.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250510075438_it")]
    partial class it
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TouristGuideApp.Models.Attraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TicketPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Attractions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Главная площадь Москвы.",
                            History = "Исторически важное место...",
                            Name = "Красная площадь",
                            OpeningHours = "Круглосуточно (кроме мероприятий)",
                            PhotoImageUrl = "/images/attractions/red_square.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "Один из крупнейших в России и один из самых значительных в мире театров оперы и балета.",
                            History = "Основан в 1776 году...",
                            Name = "Большой театр",
                            OpeningHours = "Согласно афише",
                            PhotoImageUrl = "/images/attractions/bolshoi_theatre.jpg",
                            TicketPrice = 1500m
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "Один из крупнейших и самых значительных художественных и культурно-исторических музеев России и мира.",
                            History = "Основан в 1764 году...",
                            Name = "Эрмитаж",
                            OpeningHours = "11:00 – 18:00 (выходной - понедельник)",
                            PhotoImageUrl = "/images/attractions/hermitage.jpg",
                            TicketPrice = 500m
                        });
                });

            modelBuilder.Entity("TouristGuideApp.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoatOfArmsImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoatOfArmsImageUrl = "/images/coa/moscow_coa.png",
                            History = "Москва — столица Российской Федерации, город федерального значения...",
                            Name = "Москва",
                            PhotoImageUrl = "/images/cities/moscow.jpg",
                            Population = 12655050,
                            Region = "Центральный ФО"
                        },
                        new
                        {
                            Id = 2,
                            CoatOfArmsImageUrl = "/images/coa/spb_coa.png",
                            History = "Санкт-Петербург — второй по численности населения город России...",
                            Name = "Санкт-Петербург",
                            PhotoImageUrl = "/images/cities/spb.jpg",
                            Population = 5384342,
                            Region = "Северо-Западный ФО"
                        });
                });

            modelBuilder.Entity("TouristGuideApp.Models.Attraction", b =>
                {
                    b.HasOne("TouristGuideApp.Models.City", "City")
                        .WithMany("Attractions")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TouristGuideApp.Models.City", b =>
                {
                    b.Navigation("Attractions");
                });
#pragma warning restore 612, 618
        }
    }
}
